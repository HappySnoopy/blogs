<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xsi:schemaLocation="http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-4.1.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">

    <context:component-scan base-package="net.loyintean.blog.jms"/>

 <!--      lets create an embedded ActiveMQ Broker -->
    <amq:broker useJmx="false" persistent="false">
        <amq:transportConnectors>
            <amq:transportConnector uri="tcp://localhost:0"/>
        </amq:transportConnectors>
    </amq:broker>

    <amq:pooledConnectionFactory id="connectionFactory">
        <property name="connectionFactory">
            <amq:connectionFactory brokerURL="vm://localhost">
                <amq:redeliveryPolicyMap>
                    <amq:redeliveryPolicyMap>
                        <amq:defaultEntry>
                            <amq:redeliveryPolicy maximumRedeliveries="5"
                                                  initialRedeliveryDelay="1000"/>
                        </amq:defaultEntry>
                    </amq:redeliveryPolicyMap>
                </amq:redeliveryPolicyMap>
            </amq:connectionFactory>
        </property>
    </amq:pooledConnectionFactory>

    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
    </bean>

    <amq:queue id="rediliverQueue" physicalName="test.queue.rediliver"/>
    <jms:listener-container destination-type="queue"
                            concurrency="2" acknowledge="transacted" connection-factory="connectionFactory">
        <jms:listener destination="test.queue.rediliver" ref="consumer"/>
    </jms:listener-container>


    <amq:queue id="concurrencyQueue" physicalName="test.queue.concurrency"/>
    <jms:listener-container destination-type="queue"
                            concurrency="2" acknowledge="transacted" connection-factory="connectionFactory">
        <jms:listener destination="test.queue.concurrency" ref="concurrencyConsumer"/>
    </jms:listener-container>

 
    <amq:pooledConnectionFactory id="keplerConnectionFactory">
        <property name="connectionFactory">
            <amq:connectionFactory brokerURL="tcp://10.255.33.108:61616">
                <!-- 重新投递策略 -->
                <amq:redeliveryPolicyMap>
                    <amq:redeliveryPolicyMap>
                        <amq:defaultEntry>
                            <amq:redeliveryPolicy maximumRedeliveries="5"
                                                  initialRedeliveryDelay="1000"/>
                        </amq:defaultEntry>
                    </amq:redeliveryPolicyMap>
                </amq:redeliveryPolicyMap>
            </amq:connectionFactory>
        </property>
    </amq:pooledConnectionFactory>
    <jms:listener-container destination-type="queue"
                            concurrency="2" acknowledge="transacted" connection-factory="keplerConnectionFactory">
        <jms:listener destination="Consumer.blog.VirtualTopic.kepler.debtSync.response" ref="consumer"/>
    </jms:listener-container>
</beans>
